#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 16
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
N8 = sapply(chain, length)
mean(N8)
sd(N8)
N = 32
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
group = sapply(chain, length)
mean(group)
sd(group)
N = 16
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
group = sapply(chain, length)
mean(group)
sd(group)
group
N = 8
bag = sample(1:N,N, replace = FALSE)
chain = list()
#bag = c(4,1,5,7,3)
chain[1] =  c(bag[1])
bag = bag[2:length(bag)]
for (i in 1:(N-1)){
link = bag[1];
create_new = TRUE
for (j in 1:length(chain)){
ch = unlist(chain[j])
if( ch[1] == link + 1 | ch[length(ch)] == link - 1)   {
ch = c(ch, link)
#sort.list(ch)
chain[[j]] = sort(unlist(ch))
create_new = FALSE;
break;
}
}
if(create_new){
chain[length(chain)+1] = c(link)
}
bag = bag[-1]
}
group = sapply(chain, length)
group
mean(group)
sd(group)
